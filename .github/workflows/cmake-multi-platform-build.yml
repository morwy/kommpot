name: CMake build on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build/" >> "$GITHUB_OUTPUT"
        echo "shared-build-output-dir=${{ github.workspace }}/build/shared" >> "$GITHUB_OUTPUT"
        echo "static-build-output-dir=${{ github.workspace }}/build/static" >> "$GITHUB_OUTPUT"

    - name: Install dependencies (Ubuntu)
      run: |
        sudo apt update
        sudo apt install libudev-dev ninja-build
      if: matrix.os == 'ubuntu-latest'

    - name: Configure CMake
      run: |
        cmake -B ${{ steps.strings.outputs.shared-build-output-dir }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S ${{ github.workspace }}
        cmake -B ${{ steps.strings.outputs.static-build-output-dir }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S ${{ github.workspace }}

    - name: Build shared libraries
      run: cmake --build ${{ steps.strings.outputs.shared-build-output-dir }} --config ${{ matrix.build_type }}

    - name: Build static libraries
      run: cmake --build ${{ steps.strings.outputs.static-build-output-dir }} --config ${{ matrix.build_type }}
